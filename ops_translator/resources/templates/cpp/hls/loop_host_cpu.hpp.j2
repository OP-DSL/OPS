{% extends "cpp/hls/loop_host.hpp.j2" %}

{% block prologue %}
{{super()}}

void inline kernel_{{lh.kernel}}_core(
    {% for arg in lh.args %}
        {% if loop.last %}
            {#{% if consts %}
                {% set last_check = False %}
            {% else %}
                {% set last_check = True %}
            {% endif %}#}
            {% set last_check = True %}
        {% else %}
            {% set last_check = False %}
        {% endif %}
        {% if arg is ops_read%}
            {% if prog.findStencil(arg.stencil_ptr) %}
                {% for i in range(prog.findStencil(arg.stencil_ptr).num_points)%}
        const {{lh.dats[arg.dat_id].typ}}& arg{{arg.dat_id}}_{{i}}{{"," if (not last_check)}}
                {% endfor %}
            {% endif %}
        {% endif %}
        {% if arg is ops_write or ops_rw%}
            {% if prog.findStencil(arg.stencil_ptr) %}
                {% for i in range(prog.findStencil(arg.stencil_ptr).num_points)%}
        {{lh.dats[arg.dat_id].typ}}& arg{{arg.dat_id}}_{{i}}{{"," if (not last_check)}}
                {% endfor %}
            {% endif %}
        {% endif %}
        {% if arg is ops_idx %}
        const int * idx{{"," if (not loop.last or not last_check)}}
        {% endif %}
        {% if arg is ops_gbl %}
        const {{arg.typ}}* {{kernel_args[loop.index0]}}{{"," if (not loop.last or not last_check)}}
        {% endif %}
    {% endfor %}
    {#{% for const in consts %}
        const {{const.typ}} {{const.ptr}}{{"," if not loop.last}}
    {% endfor %}#}
)
{
    {{kernel_body}}
}
{% endblock %}
{% block par_loop %}
{{super()}}
{
    ops::hls::AccessRange range;
    {% for arg in lh.args|ops_dat %}
        {% if loop.first %}
    opsRange2hlsRange(dim, ops_range, range, arg{{arg.id}}.originalProperty);
        {% endif %}
    {% endfor %}
    {% for arg in lh.args %}
        {% if prog.findStencil(arg.stencil_ptr) %}
            {% set stencil = prog.findStencil(arg.stencil_ptr) %}
            {% for i in range(stencil.num_points)%}
                {% set point = stencil.points[i] %}
    constexpr int arg{{arg.id}}_{{i}}_stencil_offset[] = { {{point.x}}, {{point.y}}, {{point.z}} };
            {% endfor %}
        {% endif %}
    {% endfor %}
    {% for arg in lh.args|ops_dat %}
    getGrid(arg{{arg.id}});
    {% endfor %}

    {% if lh.ndim > 2 %}
    for (unsigned short k = range.start[2]; k < range.end[2]; k++)
    {
    {% endif %}
    {% if lh.ndim > 1 %}
        for (unsigned short j = range.start[1]; j < range.end[1]; j++)
        {
    {% endif %}
    {% if lh.ndim > 0 %}
            for (unsigned short i = range.start[0]; i < range.end[0]; i++)
            {
    {% endif %}
    {% if lh.arg_idx != -1 %}{% for arg in lh.args|ops_dat %}{% if loop.first %}
        {% if lh.ndim > 2%}
                ops::hls::IdxType idx({i - arg{{arg.id}}.originalProperty.d_m[0], j - arg{{arg.id}}.originalProperty.d_m[1], k - arg{{arg.id}}.originalProperty.d_m[2]});
        {% elif lh.ndim > 1 %}
                ops::hls::IdxType idx({i - arg{{arg.id}}.originalProperty.d_m[0], j - arg{{arg.id}}.originalProperty.d_m[1], 0});
        {% else %}
                ops::hls::IdxType idx({i - arg{{arg.id}}.originalProperty.d_m[0], 0, 0});
        {% endif %}
    {% endif %}{% endfor %}{% endif %}
                kernel_{{lh.kernel}}_core(
    {% for arg in lh.args %}
        {% if loop.last %}
            {% set last_check = True %}
        {% else %}
            {% set last_check = False %}
        {% endif %}
        {% if arg is ops_dat %}
            {% if prog.findStencil(arg.stencil_ptr) %}
                {% for i in range(prog.findStencil(arg.stencil_ptr).num_points)%}
                    arg{{arg.id}}.hostBuffer[getOffset(arg{{arg.id}}_{{i}}_stencil_offset, arg{{arg.id}}.originalProperty, i {{", j" if (lh.ndim > 1)}}{{", k" if (lh.ndim > 2)}})]{{"," if not last_check}}
                {% endfor %}
            {% endif %}
        {% elif arg is ops_idx %}
                    idx{{"," if not last_check}}
        {% elif arg is ops_gbl %}
                    {{get_arg_gbl_name(arg)}}{{"," if (not loop.last or not last_check)}}
        {% endif %}
    {% endfor %}
                );
    {% if lh.ndim > 0 %}
            }
    {% endif %}
    {% if lh.ndim > 1 %}
        }
    {% endif %}
    {% if lh.ndim > 2 %}
    }
    {% endif %}

    {% for arg in lh.args|ops_dat %}
        {% if arg is ops_write or arg is ops_rw %}
    arg{{arg.id}}.isHostBufDirty = true;
        {% endif %}
    {% endfor %}

}
{% endblock %}