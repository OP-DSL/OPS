{% extends "cpp/master_kernel.cpp.j2" %}

{% block ops_headers %}
{{super()}}

#include <openacc.h>
#include <math.h>
#include "ops_cuda_rt_support.h"

{% if user_types %}
#include "user_types.h"
{% endif %}

{% endblock %}

{% block const_decls %}
//  global constants
{% for const in app.consts() %}
    {% if const.dim.isdigit() %}
        {% set NDIM = const.dim|int %}
            {% if NDIM > 1 %}
extern {{const.typ}} {{const.ptr}}[{{NDIM}}];
            {% else %}
extern {{const.typ}} {{const.ptr}};
            {% endif %}
    {% else %}
extern {{const.typ}} *{{const.ptr}};
    {% endif %}
{% endfor %}

void ops_init_backend() {
    acc_set_device_num(ops_get_proc()%acc_get_num_devices(acc_device_nvidia), acc_device_nvidia);
}

void ops_decl_const_char(OPS_instance *instance, int dim, char const *type, int size, char *dat, char const *name) {
    ops_execute(instance);

{% for const in app.consts() %}
    if(!strcmp(name, "{{const.name}}")) {
    {% if const.dim.isdigit() and const.dim|int == 1 %}
        //#pragma acc update device({{const.ptr}})
    {% else %}
        //#pragma acc data update device({{const.ptr}}[0:dim])
    {% endif %}
    } else
    {% if loop.last %}
    {
        throw OPSException(OPS_RUNTIME_ERROR, "error: unknown const name");
    }
    {% endif %}
{% endfor %}
}

{% endblock %}

{% block header_includes %}
{{super()}}
{% endblock %}

