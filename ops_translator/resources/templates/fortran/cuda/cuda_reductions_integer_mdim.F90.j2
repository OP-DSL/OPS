{% block reduction_m_dim_integer %}
!   =========================================================
!   Multi-dimensional reduction cuda kernel - INTEGER(KIND=4)
!   =========================================================
ATTRIBUTES (DEVICE) SUBROUTINE ReductionInt4Mdim(sharedInt4, reduction_res, input_value, reduction_op, dim)

!   ====================
!   Subroutine Arguments
!   ====================
    INTEGER(KIND=4), DIMENSION(0:*) :: sharedInt4
    INTEGER(KIND=4), DIMENSION(:), DEVICE :: reduction_res
    INTEGER(KIND=4), DIMENSION(:), INTENT(IN) :: input_value
    INTEGER(KIND=4), VALUE :: reduction_op
    INTEGER(KIND=4), VALUE :: dim

!   ==========
!   Local Data
!   ==========
    INTEGER(KIND=4) :: i1, i2
    INTEGER(KIND=4) :: d
    INTEGER(KIND=4) :: threadID

    threadID = (threadIdx%y-1)*blockDim%x + (threadIdx%x - 1)
    i1 = ishft(blockDim%x*blockDim%y,-1)

    CALL syncthreads()

    sharedInt4(threadID*dim:threadID*dim+dim-1) = input_value(1:dim)

    DO WHILE (i1 > 0 )
        CALL syncthreads()
        IF (threadID < i1) THEN
            SELECT CASE(reduction_op)
                CASE (0)
                    DO i2 = 0, dim-1
                        sharedInt4(threadID*dim + i2) = sharedInt4(threadID*dim + i2) + sharedInt4((threadID + i1)*dim + i2)
                    END DO
                CASE (1)
                    DO i2 = 0, dim-1
                        IF (sharedInt4((threadID + i1)*dim + i2) < sharedInt4(threadID*dim + i2)) THEN
                            sharedInt4(threadID*dim + i2) = sharedInt4((threadID + i1)*dim + i2)
                        END IF
                    END DO
                CASE (2)
                    DO i2 = 0, dim-1
                        IF (sharedInt4((threadID + i1)*dim + i2) > sharedInt4(threadID*dim + i2)) THEN
                            sharedInt4(threadID*dim + i2) = sharedInt4((threadID + i1)*dim + i2)
                        END IF
                    END DO
            END SELECT
        END IF
        i1 = ishft(i1,-1)
    END DO

    CALL syncthreads()

    IF (threadID .EQ. 0) THEN
        SELECT CASE(reduction_op)
            CASE (0)
                reduction_res(1:dim) = reduction_res(1:dim) + sharedInt4(0:dim-1)
            CASE (1)
                DO i2 = 1, dim
                    IF (sharedInt4(i2-1) < reduction_res(i2)) THEN
                        reduction_res(i2) = sharedInt4(i2-1)
                    END IF
                END DO
            CASE (2)
                DO i2 = 1, dim
                    IF (sharedInt4(i2-1) > reduction_res(i2)) THEN
                        reduction_res(i2) = sharedInt4(i2-1)
                    END IF
                END DO
        END SELECT
    END IF

  CALL syncthreads()

END SUBROUTINE ReductionInt4Mdim
{% endblock %}
