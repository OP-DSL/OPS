//
// auto-generated by ops.py on 2014-05-02 16:01
//



#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <math.h>


#include  "ops_lib_cpp.h"

//
// ops_par_loop declarations
//

void ops_par_loop_initialise_chunk_kernel_x(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_initialise_chunk_kernel_y(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_initialise_chunk_kernel_cellx(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_initialise_chunk_kernel_celly(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_initialise_chunk_kernel_volume(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );



#include "data.h"
#include "definitions.h"

//#include "initialise_chunk_kernel.h"

void initialise_chunk()
{

  int x_cells = grid.x_cells;
  int y_cells = grid.y_cells;
  int x_min = field.x_min;
  int x_max = field.x_max;
  int y_min = field.y_min;
  int y_max = field.y_max;



  int rangex[] = {x_min-2, x_max+3, y_min-2, y_max+3};
  int rangey[] = {x_min-2, x_max+3, y_min-2, y_max+3};

  ops_par_loop_initialise_chunk_kernel_x("initialise_chunk_kernel_x", clover_grid, 2, rangex,
               ops_arg_dat(vertexx, S2D_00_STRID2D_X, "double", OPS_WRITE),
               ops_arg_dat(xx, S2D_00_STRID2D_X, "int", OPS_READ),
               ops_arg_dat(vertexdx, S2D_00_STRID2D_X, "double", OPS_WRITE));

  ops_par_loop_initialise_chunk_kernel_y("initialise_chunk_kernel_y", clover_grid, 2, rangey,
               ops_arg_dat(vertexy, S2D_00_STRID2D_Y, "double", OPS_WRITE),
               ops_arg_dat(yy, S2D_00_STRID2D_Y, "int", OPS_READ),
               ops_arg_dat(vertexdy, S2D_00_STRID2D_Y, "double", OPS_WRITE));

  rangex[0] = x_min-2; rangex[1] = x_max+2; rangex[2] = y_min-2; rangex[3] = y_max+2;
  ops_par_loop_initialise_chunk_kernel_cellx("initialise_chunk_kernel_cellx", clover_grid, 2, rangex,
               ops_arg_dat(vertexx, S2D_00_P10_STRID2D_X, "double", OPS_READ),
               ops_arg_dat(cellx, S2D_00_STRID2D_X, "double", OPS_WRITE),
               ops_arg_dat(celldx, S2D_00_STRID2D_X, "double", OPS_WRITE));



  rangey[0] = x_min-2; rangey[1] = x_max+2; rangey[2] = y_min-2; rangey[3] = y_max+2;
  ops_par_loop_initialise_chunk_kernel_celly("initialise_chunk_kernel_celly", clover_grid, 2, rangey,
               ops_arg_dat(vertexy, S2D_00_0P1_STRID2D_Y, "double", OPS_READ),
               ops_arg_dat(celly, S2D_00_STRID2D_Y, "double", OPS_WRITE),
               ops_arg_dat(celldy, S2D_00_STRID2D_Y, "double", OPS_WRITE));


  int rangexy[] = {x_min-2,x_max+2,y_min-2,y_max+2};
  ops_par_loop_initialise_chunk_kernel_volume("initialise_chunk_kernel_volume", clover_grid, 2, rangexy,
               ops_arg_dat(volume, S2D_00, "double", OPS_WRITE),
               ops_arg_dat(celldy, S2D_00_STRID2D_Y, "double", OPS_READ),
               ops_arg_dat(xarea, S2D_00, "double", OPS_WRITE),
               ops_arg_dat(celldx, S2D_00_STRID2D_X, "double", OPS_READ),
               ops_arg_dat(yarea, S2D_00, "double", OPS_WRITE));



}
