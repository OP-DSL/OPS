//
// auto-generated by ops.py
//
void accelerate_kernel_adjoint(
    const ACC<double> &density0, ACC<double> &density0_a1s,
    const ACC<double> &volume, ACC<double> &stepbymass,
    ACC<double> &stepbymass_a1s, const ACC<double> &xvel0,
    ACC<double> &xvel0_a1s, ACC<double> &xvel1, ACC<double> &xvel1_a1s,
    const ACC<double> &xarea,
    const ACC<double> &pressure, ACC<double> &pressure_a1s,
    const ACC<double> &yvel0, ACC<double> &yvel0_a1s, ACC<double> &yvel1,
    ACC<double> &yvel1_a1s, const ACC<double> &yarea,
    const ACC<double> &viscosity, ACC<double> &viscosity_a1s) {
  double nodal_mass;
  double nodal_mass_a1s;
  double temp;
  double temp_a1s;
  double temp0;
  double temp1;
  double temp2;
  double temp3;
  double temp_a1s0;
  nodal_mass =
      (density0(-1, -1) * volume(-1, -1) + density0(0, -1) * volume(0, -1) +
       density0(0, 0) * volume(0, 0) + density0(-1, 0) * volume(-1, 0)) *
      0.25;
  stepbymass(0, 0) = 0.5 * dt / nodal_mass;
  temp3 = viscosity(-1, 0) - viscosity(-1, -1);
  temp2 = yarea(-1, 0);
  temp1 = viscosity(0, 0) - viscosity(0, -1);
  temp0 = yarea(0, 0);
  stepbymass_a1s(0, 0) += -(temp0 * temp1 + temp2 * temp3) * yvel1_a1s(0, 0);
  temp_a1s = -(stepbymass(0, 0) * yvel1_a1s(0, 0));
  viscosity_a1s(0, 0) += +temp0 * temp_a1s;
  viscosity_a1s(0, -1) += -temp0 * temp_a1s;
  viscosity_a1s(-1, 0) += +temp2 * temp_a1s;
  viscosity_a1s(-1, -1) += -temp2 * temp_a1s;
  temp3 = viscosity(0, -1) - viscosity(-1, -1);
  temp2 = xarea(0, -1);
  temp1 = viscosity(0, 0) - viscosity(-1, 0);
  temp0 = xarea(0, 0);
  stepbymass_a1s(0, 0) += -(temp0 * temp1 + temp2 * temp3) * xvel1_a1s(0, 0);
  temp_a1s = -(stepbymass(0, 0) * xvel1_a1s(0, 0));
  viscosity_a1s(0, 0) += +temp0 * temp_a1s;
  viscosity_a1s(-1, 0) += -temp0 * temp_a1s;
  viscosity_a1s(0, -1) += +temp2 * temp_a1s;
  viscosity_a1s(-1, -1) += -temp2 * temp_a1s;
  temp3 = pressure(-1, 0) - pressure(-1, -1);
  temp2 = yarea(-1, 0);
  temp1 = pressure(0, 0) - pressure(0, -1);
  temp0 = yarea(0, 0);
  yvel0_a1s(0, 0) += +yvel1_a1s(0, 0);
  stepbymass_a1s(0, 0) += -(temp0 * temp1 + temp2 * temp3) * yvel1_a1s(0, 0);
  temp_a1s = -(stepbymass(0, 0) * yvel1_a1s(0, 0));
  yvel1_a1s(0, 0) = 0.0;
  pressure_a1s(0, 0) += +temp0 * temp_a1s;
  pressure_a1s(0, -1) += -temp0 * temp_a1s;
  pressure_a1s(-1, 0) += +temp2 * temp_a1s;
  pressure_a1s(-1, -1) += -temp2 * temp_a1s;
  temp = pressure(0, -1) - pressure(-1, -1);
  temp0 = xarea(0, -1);
  temp1 = pressure(0, 0) - pressure(-1, 0);
  temp2 = xarea(0, 0);
  xvel0_a1s(0, 0) += +xvel1_a1s(0, 0);
  stepbymass_a1s(0, 0) += -(temp2 * temp1 + temp0 * temp) * xvel1_a1s(0, 0);
  temp_a1s0 = -(stepbymass(0, 0) * xvel1_a1s(0, 0));
  xvel1_a1s(0, 0) = 0.0;
  pressure_a1s(0, 0) += +temp2 * temp_a1s0;
  pressure_a1s(-1, 0) += -temp2 * temp_a1s0;
  pressure_a1s(0, -1) += +temp0 * temp_a1s0;
  pressure_a1s(-1, -1) += -temp0 * temp_a1s0;
  nodal_mass_a1s =
      -(dt * 0.5 * stepbymass_a1s(0, 0) / (nodal_mass * nodal_mass));
  stepbymass_a1s(0, 0) = 0.0;
  temp_a1s = 0.25 * nodal_mass_a1s;
  density0_a1s(-1, -1) += +volume(-1, -1) * temp_a1s;
  density0_a1s(0, -1) += +volume(0, -1) * temp_a1s;
  density0_a1s(0, 0) += +volume(0, 0) * temp_a1s;
  density0_a1s(-1, 0) += +volume(-1, 0) * temp_a1s;
}

