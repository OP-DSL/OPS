
ifndef OPS_GENERATED_SUFFIX
OPS_GENERATED_SUFFIX=_ops
endif

ifeq ($(strip $(OPS_GENERATED)),)
OPS_GENERATED=$(join $(addsuffix $(OPS_GENERATED_SUFFIX), $(basename $(OPS_FILES))), $(suffix $(OPS_FILES)))
endif

OPS_FILES_PLAIN=$(OPS_FILES) $(OTHER_FILES)
OPS_FILES_GEN=$(OTHER_FILES) $(OPS_GENERATED)

ifndef APP
$(error APP is not set)
endif

ifndef MAIN_SRC
$(error MAIN_SRC is not set)
endif

VERBOSE=

ifdef OPS_GENERATOR_VERBOSE
	VERBOSE=-v
endif

DEFINES=-DOPS_ACC_IGNORE

.generated: $(OPS_FILES) $(OPS_INSTALL_PATH)/../ops_translator_legacy/fortran/*.py
	@echo "generating translations for ${OPS_FILES}"
	@echo "OPS_EXTENTIONS: ${OPS_GENERATED_SUFFIX}"
	@echo "OPS_GENERATED: ${OPS_GENERATED}"
	$(OPS_INSTALL_PATH)/../ops_translator_legacy/fortran/ops_fortran.py $(OPS_FILES)
	rm -f .generated
	touch .generated

# check what targets can not be built with current environment setting and give warnings
ifneq ($(strip $(TARGETS)),)

ifneq (,$(filter cuda mpi_cuda mpi_cuda_tiled,$(TARGETS)))
ifneq ($(OPS_COMPILER),pgi)
TARGETS:=$(filter-out cuda mpi_cuda mpi_cuda_tiled,$(TARGETS))
#$(info CUDA targets cannot be built with current environment settings....)
#$(info Build continues without CUDA targets.....)
endif
endif

endif	#ifneq TARGETS

ifndef TARGETS
TARGETS	= seq tiled openmp mpi mpi_openmp mpi_tiled

ifeq ($(OPS_COMPILER),pgi)
TARGETS += $(APP)_cuda $(APP)_mpi_cuda $(APP)_openacc $(APP)_mpi_openacc
endif

ifeq ($(OPS_COMPILER),xlp8)
TARGETS += poisson_mpi_cuda
endif

endif	#ifndef TARGETS

ifneq (,$(filter openacc mpi_openacc mpi_openacc_tiled,$(TARGETS)))
TARGETS:=$(filter-out openacc mpi_openacc mpi_openacc_tiled,$(TARGETS))
endif

APP_TARGETS = $(addprefix $(APP)_, $(TARGETS))

all: $(APP_TARGETS)

cleanfiles:
	rm -f *.o *.mod

#=====================================================================================================================================================================
#
# Sequential version
#

$(APP)_seq: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_seq.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_seq"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(OTHER_FILES) mpi_openmp/*_seq_kernel.F90 $(OPS_GENERATED) $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ) -o $(APP)_seq

#=====================================================================================================================================================================
#
# mpi version
#

$(APP)_mpi: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_mpi.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(PGIMPILINK) -DOPS_MPI $(OTHER_FILES) mpi_openmp/*_seq_kernel.F90 $(OPS_GENERATED) $(APP_LIBS) -lops_for_mpi $(F_HDF5_LIB_MPI) -o $(APP)_mpi

#=====================================================================================================================================================================
#
# OpenMP version
#

$(APP)_openmp: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_seq.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_openmp"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(OMPFLAGS) $(OTHER_FILES) mpi_openmp/*_seq_kernel.F90 $(OPS_GENERATED) $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ) -o $(APP)_openmp

$(APP)_mpi_openmp: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_mpi.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_openmp"	
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(OMPFLAGS) $(PGIMPILINK) -DOPS_MPI $(OTHER_FILES) mpi_openmp/*_seq_kernel.F90 $(OPS_GENERATED) $(APP_LIBS) -lops_for_mpi $(F_HDF5_LIB_MPI) -o $(APP)_mpi_openmp

#=====================================================================================================================================================================
#
# Tiled version
#

$(APP)_tiled: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_seq.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_tiled"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) -DOPS_LAZY $(OTHER_FILES) mpi_openmp/*_seq_kernel.F90 $(OPS_GENERATED) $(APP_LIBS) -lops_for_seq $(F_HDF5_LIB_SEQ) -o $(APP)_tiled

$(APP)_mpi_tiled: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_mpi.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_tiled"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS) $(FLINK) $(PGIMPILINK) -DOPS_LAZY -DOPS_MPI $(OTHER_FILES) mpi_openmp/*_seq_kernel.F90 $(OPS_GENERATED) $(APP_LIBS) -lops_for_mpi $(F_HDF5_LIB_MPI) -o $(APP)_mpi_tiled

#=====================================================================================================================================================================
#
# CUDA version
#

$(APP)_cuda: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_cuda.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_cuda"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS_CUDA) $(FLINK) $(CUDAFOR) $(OTHER_FILES) cuda/*_cuda_kernel.CUF $(OPS_GENERATED) $(APP_LIBS) -lops_for_cuda $(F_HDF5_LIB_SEQ) -o $(APP)_cuda

$(APP)_mpi_cuda: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_mpi_cuda.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_cuda"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS_CUDA) $(FLINK) $(CUDAFOR) $(PGIMPILINK) -DOPS_MPI $(OTHER_FILES) cuda/*_cuda_kernel.CUF $(OPS_GENERATED) $(APP_LIBS) -lops_for_mpi_cuda $(F_HDF5_LIB_MPI) -o $(APP)_mpi_cuda

$(APP)_mpi_cuda_tiled: Makefile .generated $(OPS_INSTALL_PATH)/fortran/lib/$(OPS_COMPILER)/libops_for_mpi_cuda.a $(OPS_FILES_GEN)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_cuda_tiled"
		@echo ""
		$(MPIF90) $(FFLAGS) $(APP_FLAGS) $(FMODS_CUDA) $(FLINK) $(CUDAFOR) $(PGIMPILINK) -DOPS_LAZY -DOPS_MPI $(OTHER_FILES) cuda/*_cuda_kernel.CUF $(OPS_GENERATED) $(APP_LIBS) -lops_for_mpi_cuda $(F_HDF5_LIB_MPI) -o $(APP)_mpi_cuda_tiled
#=====================================================================================================================================================================
#
# cleanup
#

cleanall: clean
	rm -rf ./mpi_openmp

clean:
	rm -f *.o
	rm -f *.oo
	rm -f *.optrpt
	rm -f *.mod
	rm -f *~
	rm -f $(APP)_seq
	rm -f $(APP)_openmp
	rm -f $(APP)_cuda
	rm -f $(APP)_mpi
	rm -f $(APP)_mpi_openmp
	rm -f $(APP)_mpi_cuda
	rm -f $(APP)_openacc
	rm -f $(APP)_mpi_openacc
	rm -f $(APP)_tiled
	rm -f $(APP)_mpi_tiled
	rm -f $(OPS_GENERATED)
	rm -f .generated constants_list.txt
