CC    := pgcc -c99
CXX   := pgc++
FC	  := pgfortran

ifdef DEBUG
	CCFLAGS   := -O0 -g 
else
	CCFLAGS   := -O3 -fast -gopt
#-Minline #-Mipa=fast #-Mlist #-mp=nonuma -Kieee
endif

CUDA_ALIGNE_FLAG := -D__x86_64 -D__align__\(n\)=__attribute__\(\(aligned\(n\)\)\) -D__location__\(a\)=__annotate__\(a\) -DCUDARTAPI=

CXXFLAGS      := $(CCFLAGS) -std=c++11
FFLAGS         = -O3 -fast -gopt

NVCCFLAGS ?= -Xcompiler="-fPIC"

ifndef DEBUG
    NVCCFLAGS += -O3 -g -std=c++11
else
    NVCCFLAGS += -O0 -g -G -std=c++11
endif
ifdef IEEE
NVCCFLAGS += --fmad false
endif
NVCC_FLAG_SET := 1

OPENACCFLAGS   = $(CCFLAGS) -module $(F_INC_MOD)/openacc

FMODS         := -module $(F_INC_MOD)
FMODS_CUDA    := -module $(F_INC_MOD)/cuda

OMPFLAGS := -mp
OMPOFFLOADFLAGS = -mp=gpu

ifdef THREADED
	THREADING_FLAGS ?= -mp
endif

CUDAFOR	= -DOPS_WITH_CUDAFOR
OpenACCFLAGS = -acc
CXXLINK := -c++libs -lstdc++
MPILINK := -lmpi_cxx

ifdef IEEE
CCFLAGS += -Kieee -nofma
CXXFLAGS += -Kieee -nofma
FFLAGS += -Kieee -nofma
endif

ifndef NV_ARCH
print:
	@echo "select an NVIDIA device to compile in CUDA, e.g. make NV_ARCH=Kepler"
	NV_ARCH=Kepler
endif
ifeq ($(NV_ARCH),Fermi)
OpenACCFLAGS += -ta=nvidia,cc20 -Mcuda=cc20
CUDAFOR      += -cuda -gpu=cc20
NVCCFLAGS    += -arch=sm_20
else
ifeq ($(NV_ARCH),Kepler)
OpenACCFLAGS += -ta=nvidia,cc35 -Mcuda=cc35
CUDAFOR      += -cuda -gpu=cc35
NVCCFLAGS    += -arch=sm_35
else
ifeq ($(NV_ARCH),Pascal)
OpenACCFLAGS += -ta=nvidia,cc60 -Mcuda=cc60
CUDAFOR      += -cuda -gpu=cc60
NVCCFLAGS    += -arch=sm_60
else
ifeq ($(NV_ARCH),Volta)
OpenACCFLAGS += -ta=nvidia,cc70 -Mcuda=cc70
CUDAFOR      += -cuda -gpu=cc70
NVCCFLAGS    += -arch=sm_70
else
ifeq ($(NV_ARCH),Ampere)
OpenACCFLAGS += -ta=nvidia,cc80 -Mcuda=cc80
CUDAFOR      += -cuda -gpu=cc80
NVCCFLAGS    += -arch=sm_80
else
ifeq ($(NV_ARCH),Hopper)
OpenACCFLAGS += -ta=nvidia,cc90 -Mcuda=cc90
CUDAFOR 	 += -cuda -gpu=cc90
NVCCFLAGS    += -arch=sm_90
endif
endif
endif
endif
endif
endif

#CUDAFOR = -DOPS_WITH_CUDAFOR -cuda -gpu=rdc
