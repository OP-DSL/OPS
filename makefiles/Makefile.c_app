
ifndef OPS_GENERATED_SUFFIX
OPS_GENERATED_SUFFIX=_ops
endif

ifeq ($(strip $(OPS_GENERATED)),)
OPS_GENERATED=$(join $(addsuffix $(OPS_GENERATED_SUFFIX), $(basename $(OPS_FILES))), $(suffix $(OPS_FILES)))
endif

OPS_FILES_PLAIN=$(OPS_FILES) $(OTHER_FILES)
OPS_FILES_GEN=$(OPS_GENERATED) $(OTHER_FILES)

ifndef APP
$(error APP is not set)
endif

ifndef MAIN_SRC
$(error MAIN_SRC is not set)
endif

VERBOSE=

ifdef OPS_GENERATOR_VERBOSE
	VERBOSE=-v
endif

DEFINES=-DOPS_ACC_IGNORE

.generated: $(HEADERS) $(OPS_FILES) $(OPS_INSTALL_PATH)/../ops_translator/ops-translator/*.py
	@echo "OPS_COMPILER: ${OPS_COMPILER}"
	@echo "generating translations for ${OPS_FILES}"
	@echo "OPS_EXTENTIONS: ${OPS_GENERATED_SUFFIX}"
	@echo "OPS_GENERATED: ${OPS_GENERATED}"
	which python3
	python3 $(OPS_INSTALL_PATH)/../ops_translator/ops-translator $(VERBOSE) $(DEFINES) -I $(OPS_INSTALL_PATH)/c/include/ --file_paths $(OPS_FILES)
	rm -f .generated
	touch .generated

# check what targets can not be built with current environment setting and give warnings
ifneq ($(strip $(TARGETS)),)

ifneq (,$(filter cuda mpi_cuda mpi_cuda_tiled,$(TARGETS)))
ifndef CUDA_INSTALL_PATH
TARGETS:=$(filter-out cuda mpi_cuda mpi_cuda_tiled,$(TARGETS))
#$(info CUDA targets cannot be built with current environment settings....)
#$(info Please set the CUDA_INSTALL_PATH and relevant environment variables (e.g., PATH, LD_LIBRARY_PATH).)
#$(info Build continues without CUDA targets.....)
endif
endif

ifneq (,$(filter hip mpi_hip mpi_hip_tiled,$(TARGETS)))
ifndef HIP_INSTALL_PATH
TARGETS:=$(filter-out hip mpi_hip mpi_hip_tiled,$(TARGETS))
#$(info HIP targets cannot be built with current environment settings....)
#$(info Please set the HIP_INSTALL_PATH and relevant environment variables (e.g., PATH, LD_LIBRARY_PATH).)
#$(info Build continues without HIP targets.....)
endif
endif

ifneq (,$(filter sycl mpi_sycl mpi_sycl_tiled,$(TARGETS)))
ifndef SYCL_INSTALL_PATH
TARGETS:=$(filter-out sycl mpi_sycl mpi_sycl_tiled,$(TARGETS))
endif
endif

#ifneq (,$(filter openacc mpi_openacc mpi_openacc_tiled,$(TARGETS)))
#ifneq ($(OPS_COMPILER),pgi)
#TARGETS:=$(filter-out openacc mpi_openacc mpi_openacc_tiled,$(TARGETS))
#endif
#endif

endif   #ifneq TARGETS

ifndef TARGETS
TARGETS = dev_seq dev_mpi seq tiled openmp mpi mpi_openmp mpi_tiled ompoffload mpi_ompoffload mpi_ompoffload_tiled

ifdef CUDA_INSTALL_PATH
TARGETS += cuda mpi_cuda mpi_cuda_tiled
endif

ifdef HIP_INSTALL_PATH
TARGETS += hip mpi_hip mpi_hip_tiled
endif

ifdef SYCL_INSTALL_PATH
TARGETS += sycl mpi_sycl mpi_sycl_tiled
endif

endif	#ifndef TARGETS

#ifdef HIP_INSTALL_PATH
#TARGETS:=$(filter-out ompoffload mpi_ompoffload mpi_ompoffload_tiled,$(TARGETS))
#endif

ifneq (,$(filter openacc mpi_openacc mpi_openacc_tiled,$(TARGETS)))
TARGETS:=$(filter-out openacc mpi_openacc mpi_openacc_tiled,$(TARGETS))
endif

ifneq (,$(filter opencl mpi_opencl,$(TARGETS)))
TARGETS:=$(filter-out opencl mpi_opencl,$(TARGETS))
endif

ifneq (,$(filter ompoffload mpi_ompoffload mpi_ompoffload_tiled,$(TARGETS)))
ifeq ($(OPS_COMPILER),gnu)
TARGETS:=$(filter-out ompoffload mpi_ompoffload mpi_ompoffload_tiled,$(TARGETS))
endif
ifeq ($(OPS_COMPILER),intel)
TARGETS:=$(filter-out ompoffload mpi_ompoffload mpi_ompoffload_tiled,$(TARGETS))
endif
ifeq ($(OPS_COMPILER),intel-sycl)
TARGETS:=$(filter-out ompoffload mpi_ompoffload mpi_ompoffload_tiled,$(TARGETS))
endif
endif

ifdef THREADED
    CXXFLAGS += $(THREADING_FLAGS)
endif

ifneq ($(strip $(MPI_INSTALL_PATH)),)
	I_MPI_INC = -I$(MPI_INC)
	L_MPI_LIB = -L$(MPI_LIB)
else
	I_MPI_INC = $(foreach dir,$(shell $(MPICC) --showme:incdirs),-I$(dir))
endif

APP_TARGETS = $(addprefix $(APP)_, $(TARGETS))

all: $(APP_TARGETS)

#=====================================================================================================================================================================
#
# Dev version
#

$(APP)_dev_seq: Makefile $(HEADERS) $(OPS_FILES_PLAIN) $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a
		@echo "Building ${APP}_dev_seq" 
		$(CXX) $(CXXFLAGS) -std=c++11 -D$(OPS_COMPILER) -I$(C_OPS_INC) $(OPS_FILES_PLAIN) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_SEQ) $(TRID_SEQ) $(HDF5_LIB_SEQ) -o $(APP)_dev_seq

$(APP)_dev_mpi: Makefile $(OPS_FILES_PLAIN) $(HEADERS) $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a
		@echo "Building ${APP}_dev_mpi"
	    $(MPICPP) $(CXXFLAGS) -std=c++11 -D$(OPS_COMPILER) -DOPS_MPI -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_PLAIN) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_MPI) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_dev_mpi

#=====================================================================================================================================================================
#
# Sequential version
#

MPI_OPENMP_KERNELS = mpi_openmp_kernels.cpp

$(APP)_seq: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_seq"
		@echo ""
		$(MPICPP) $(CXXFLAGS) -D$(OPS_COMPILER) -I$(C_OPS_INC) $(OPS_FILES_GEN) -I. ./mpi_openmp/$(MPI_OPENMP_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_SEQ) $(TRID_SEQ) $(HDF5_LIB_SEQ) -o $(APP)_seq

#=====================================================================================================================================================================
#
# mpi version
#

$(APP)_mpi: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi"
		@echo ""
	    $(MPICPP) $(CXXFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./mpi_openmp/$(MPI_OPENMP_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_MPI) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi

#=====================================================================================================================================================================
#
# OpenMP version
#

$(APP)_openmp: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_openmp"
		@echo ""
	    $(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -D$(OPS_COMPILER) -I$(C_OPS_INC) $(OPS_FILES_GEN) -I. ./mpi_openmp/$(MPI_OPENMP_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_SEQ) $(TRID_SEQ) $(HDF5_LIB_SEQ) -o $(APP)_openmp

$(APP)_mpi_openmp: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_openmp"
		@echo ""
	  	$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./mpi_openmp/$(MPI_OPENMP_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_MPI) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_openmp

#=====================================================================================================================================================================
#
# OpenMP offload version
#

OMPOFFLOAD_KERNELS = openmp_offload_kernels.cpp

$(APP)_ompoffload: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_ompoffload.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_ompoffload"
		@echo ""
		$(CXX) $(CXXFLAGS) $(OMPOFFLOADFLAGS) -D$(OPS_COMPILER) -I$(C_OPS_INC) $(OPS_FILES_GEN) -I. ./openmp_offload/$(OMPOFFLOAD_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_OMPOFFLOAD) $(HDF5_LIB_SEQ) -o $(APP)_ompoffload

$(APP)_mpi_ompoffload: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_ompoffload.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_ompoffload"
		@echo ""
		$(MPICXX) $(CXXFLAGS) $(OMPOFFLOADFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./openmp_offload/$(OMPOFFLOAD_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_OMPOFFLOAD) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_ompoffload

$(APP)_mpi_ompoffload_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_ompoffload.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_ompoffload_tiled"
		@echo ""
		$(MPICXX) $(CXXFLAGS) $(OMPOFFLOADFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -DOPS_LAZY -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./openmp_offload/$(OMPOFFLOAD_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_OMPOFFLOAD) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_ompoffload_tiled

#=====================================================================================================================================================================
#
# HIP version
#

$(APP)_hip: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_hip.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_hip"
		@echo ""
		$(HIPCC) $(CXXFLAGS) $(HIPFLAGS) -D$(OPS_COMPILER) -I$(C_OPS_INC) $(OPS_FILES_GEN) -I. ./hip/hip_kernels.cpp $(HIPRAND) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_HIP) $(HDF5_LIB_SEQ) -o $(APP)_hip

$(APP)_mpi_hip: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_hip.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_hip"
		@echo ""
		$(HIPMPICPP) $(CXXFLAGS) $(HIPFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./hip/hip_kernels.cpp $(HIPRAND) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_HIP) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_hip

$(APP)_mpi_hip_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_hip.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_hip_tiled"
		@echo ""
		$(HIPMPICPP) $(CXXFLAGS) $(HIPFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -DOPS_LAZY -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./hip/hip_kernels.cpp $(HIPRAND) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_HIP) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_hip_tiled


#=====================================================================================================================================================================
#
# Tiled version
#

$(APP)_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_tiled"
		@echo ""
		$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -D$(OPS_COMPILER) -DOPS_LAZY -I$(C_OPS_INC) $(OPS_FILES_GEN) -I. ./mpi_openmp/$(MPI_OPENMP_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_SEQ) $(TRID_SEQ) $(HDF5_LIB_SEQ) -o $(APP)_tiled

$(APP)_mpi_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_tiled"
		@echo ""
		$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -DOPS_LAZY -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./mpi_openmp/$(MPI_OPENMP_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_MPI) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_tiled

#=====================================================================================================================================================================
#
# CUDA version
#

$(APP)_cuda: ./cuda/$(APP)_kernels_cu.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_cuda.a
		@echo ""
		@echo ""
		@echo "Building ${APP}_cuda"
		@echo ""
		$(MPICPP) $(OMPFLAGS) $(CXXFLAGS) -D$(OPS_COMPILER) -I$(CUDA_INC) -I$(C_OPS_INC) $(OPS_FILES_GEN) ./cuda/$(APP)_kernels_cu.o -L$(CUDA_LIB) $(CUDART) $(CURAND) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_CUDA) $(TRID_CUDA) $(HDF5_LIB_SEQ) -o $(APP)_cuda

$(APP)_mpi_cuda: ./cuda/$(APP)_kernels_mpi_cu.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_cuda"
		@echo ""
		$(MPICPP) $(OMPFLAGS) $(CXXFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -I$(CUDA_INC) -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) ./cuda/$(APP)_kernels_mpi_cu.o -L$(CUDA_LIB) $(CUDART) $(CURAND) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_CUDA) $(TRID_MPI_CUDA) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_cuda

$(APP)_mpi_cuda_tiled: ./cuda/$(APP)_kernels_mpi_tiled_cu.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_cuda_tiled"
		@echo ""
		$(MPICPP) $(OMPFLAGS) $(CXXFLAGS) -D$(OPS_COMPILER) -DOPS_MPI -DOPS_LAZY -I$(CUDA_INC) -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) ./cuda/$(APP)_kernels_mpi_tiled_cu.o -L$(CUDA_LIB) $(CUDART) $(CURAND) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_CUDA) $(TRID_MPI_CUDA) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_cuda_tiled

./cuda/$(APP)_kernels_cu.o:	.generated Makefile
		$(NVCC) $(NVCCFLAGS) $(CODE_GEN_CUDA) -I$(C_OPS_INC) -I. -c -o ./cuda/$(APP)_kernels_cu.o ./cuda/cuda_kernels.cu

./cuda/$(APP)_kernels_mpi_cu.o:	.generated Makefile
		$(NVCC) $(NVCCFLAGS) -DOPS_MPI $(CODE_GEN_CUDA) -I$(C_OPS_INC) -I. -DMPICH_IGNORE_CXX_SEEK $(I_MPI_INC) -c -o ./cuda/$(APP)_kernels_mpi_cu.o ./cuda/cuda_kernels.cu

./cuda/$(APP)_kernels_mpi_tiled_cu.o:	.generated Makefile
		$(NVCC) $(NVCCFLAGS) -DOPS_MPI -DOPS_LAZY $(CODE_GEN_CUDA) -I$(C_OPS_INC) -I. -DMPICH_IGNORE_CXX_SEEK $(I_MPI_INC) -c -o ./cuda/$(APP)_kernels_mpi_tiled_cu.o ./cuda/cuda_kernels.cu

#=====================================================================================================================================================================
#
# OpenACC version
#

#$(APP)_openacc: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_cuda.a
#		@echo ""
#		@echo ""
#		@echo "Building ${APP}_openacc"
#		@echo ""
#		$(MPICPP) $(OpenACCFLAGS) $(CUDA_ALIGNE_FLAG) $(CXXFLAGS) -I$(CUDA_INC) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(CUDA_LIB) $(OPS_FILES_GEN) -I. ./openacc/openacc_kernels.cpp -lcudart $(HDF5_LIB_SEQ) -lops_cuda -o $(APP)_openacc

#$(APP)_mpi_openacc: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
#		@echo ""
#		@echo ""
#		@echo "Building ${APP}_mpi_openacc"
#		@echo ""
#		$(MPICPP) $(OpenACCFLAGS) $(CUDA_ALIGNE_FLAG) $(CXXFLAGS) -DOPS_MPI -I$(CUDA_INC) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(CUDA_LIB) $(OPS_FILES_GEN) -I. ./openacc/openacc_kernels.cpp -lcudart $(HDF5_LIB_MPI) -lops_mpi_cuda -o $(APP)_mpi_openacc

#$(APP)_mpi_openacc_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
#		@echo ""
#		@echo ""
#		@echo "Building ${APP}_mpi_openacc_tiled"
#		@echo ""
#		$(MPICPP) $(OpenACCFLAGS) $(CUDA_ALIGNE_FLAG) $(CXXFLAGS) -DOPS_MPI -DOPS_LAZY -I$(CUDA_INC) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(CUDA_LIB) $(OPS_FILES_GEN) -I. ./openacc/openacc_kernels.cpp -lcudart $(HDF5_LIB_MPI) -lops_mpi_cuda -o $(APP)_mpi_openacc_tiled

#=====================================================================================================================================================================
#
# SYCL version
#
SYCL_KERNELS = sycl_kernels.cpp

$(APP)_sycl: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_sycl.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_sycl"
		@echo ""
		$(SYCLCXX) $(CXXFLAGS) $(SYCL_FLAGS) -D$(OPS_COMPILER) -I$(C_OPS_INC) $(OPS_FILES_GEN) -I. ./sycl/$(SYCL_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_SYCL) $(HDF5_LIB_SEQ) -o $(APP)_sycl

$(APP)_mpi_sycl: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_sycl.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_sycl"
		@echo ""
		$(SYCLMPICXX) $(CXXFLAGS) $(SYCL_FLAGS) -D$(OPS_COMPILER) -DOPS_MPI -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./sycl/$(SYCL_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_SYCL) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_sycl

$(APP)_mpi_sycl_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_sycl.a $(OPS_FILES_GEN) $(HEADERS)
		@echo ""
		@echo ""
		@echo "Building ${APP}_mpi_sycl_tiled"
		@echo ""
		$(SYCLMPICXX) $(CXXFLAGS) $(SYCL_FLAGS) -D$(OPS_COMPILER) -DOPS_MPI -DOPS_LAZY -I$(C_OPS_INC) $(I_MPI_INC) $(OPS_FILES_GEN) -I. ./sycl/$(SYCL_KERNELS) -L$(C_OPS_LIB) $(OPS_LINK) $(OPS_LIB_MPI_SYCL) $(HDF5_LIB_MPI) $(L_MPI_LIB) $(MPI_LINK) -o $(APP)_mpi_sycl_tiled

#=====================================================================================================================================================================
#
# cleanup
#

cleanall: clean
	rm -rf ./mpi_openmp ./cuda ./hip ./openmp_offload ./sycl
	
clean:
	rm -f *.o
	rm -f *.oo
	rm -f *.optrpt
	rm -f *~
	rm -f *.lst
	rm -f $(APP)_dev_seq
	rm -f $(APP)_dev_mpi
	rm -f $(APP)_seq
	rm -f $(APP)_tiled
	rm -f $(APP)_openmp
	rm -f $(APP)_mpi
	rm -f $(APP)_mpi_tiled
	rm -f $(APP)_mpi_openmp
	rm -f $(APP)_cuda
	rm -f $(APP)_mpi_cuda
	rm -f $(APP)_mpi_cuda_tiled
	rm -f $(APP)_hip
	rm -f $(APP)_mpi_hip
	rm -f $(APP)_mpi_hip_tiled
#	rm -f $(APP)_openacc
#	rm -f $(APP)_mpi_openacc
#	rm -f $(APP)_mpi_openacc_tiled
	rm -f $(APP)_ompoffload
	rm -f $(APP)_mpi_ompoffload
	rm -f $(APP)_mpi_ompoffload_tiled
	rm -f $(APP)_sycl
	rm -f $(APP)_mpi_sycl
	rm -f $(APP)_mpi_sycl_tiled
	rm -f $(OPS_GENERATED)
	rm -f .generated constants_list.txt cudafe
