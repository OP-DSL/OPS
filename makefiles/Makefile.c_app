
ifndef OPS_GENERATED_SUFFIX
OPS_GENERATED_SUFFIX="_ops"
endif

OPS_GENERATED=$(join $(addsuffix $(OPS_GENERATED_SUFFIX), $(basename $(OPS_FILES))), $(suffix $(OPS_FILES)))
OPS_FILES_PLAIN=$(OPS_FILES) $(OTHER_FILES)
OPS_FILES_GEN=$(OPS_GENERATED) $(OTHER_FILES)

ifndef APP
$(error APP is not set)
endif

ifndef MAIN_SRC
$(error MAIN_SRC is not set)
endif

VERBOSE=

ifdef OPS_GENERATOR_VERBOSE
	VERBOSE=-v
endif

.generated: $(HEADERS) $(OPS_FILES) $(OPS_INSTALL_PATH)/../ops_translator_v2/ops-translator/*.py
	@echo "generating translations for ${OPS_FILES}"
	@echo "OPS_EXTENTIONS: ${OPS_EXTENTIONS} OPS_GENERATED: ${OPS_GENERATED}"
	which python3
	python3 $(OPS_INSTALL_PATH)/../ops_translator_v2/ops-translator $(VERBOSE) -I $(OPS_INSTALL_PATH)/c/include/ --file_paths $(OPS_FILES)
	rm -f .generated
	touch .generated
	#touch ./OpenCL/$(MAIN_SRC)_seq_kernels.cpp

ifndef TARGETS
TARGETS = dev_seq dev_mpi mpi mpi_openmp openmp seq mpi_inline tiled mpi_tiled cuda mpi_cuda mpi_cuda_tiled opencl mpi_opencl
endif



ifeq ($(OPS_COMPILER),pgi)
TARGETS += openacc mpi_openacc
else
TARGETS += openacc_error
endif
ifdef THREADED
CXXFLAGS += $(THREADING_FLAGS)
endif

APP_TARGETS = $(addprefix $(APP)_, $(TARGETS))

all: $(APP_TARGETS)

$(APP)_dev_seq: Makefile $(HEADERS) $(OPS_FILES_PLAIN) $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a
       	@echo "Building ${APP}_dev_seq" 
		$(CXX) $(CXXFLAGS) -std=c++11 -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_PLAIN) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_SEQ) $(TRID_SEQ) -fopenmp -o $(APP)_dev_seq

$(APP)_dev_mpi: Makefile $(OPS_FILES_PLAIN) $(HEADERS) $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a
		@echo "Building ${APP}_dev_mpi"
	    $(MPICPP) $(CXXFLAGS) -DOPS_MPI -std=c++11 -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_PLAIN) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_MPI) -fopenmp -o $(APP)_dev_mpi

#
# mpi version
#

SEQ_KERNELS = seq_kernels.cpp

$(APP)_mpi: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a
		@echo "Building ${APP}_mpi"
	    $(MPICPP) $(CXXFLAGS) -DOPS_MPI -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) -I. ./MPI_OpenMP/$(SEQ_KERNELS) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_MPI) -fopenmp -o $(APP)_mpi

#
# OpenMP version
#

$(APP)_mpi_openmp: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a $(OPS_FILES_GEN) $(HEADERS)
	        $(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -DOPS_MPI -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) -I. ./MPI_OpenMP/$(SEQ_KERNELS) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI) $(TRID_LIB) -o $(APP)_mpi_openmp


$(APP)_openmp: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a $(OPS_FILES_GEN) $(HEADERS)
	        $(CXX) $(OMPFLAGS) $(CXXFLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. ./MPI_OpenMP/$(SEQ_KERNELS) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_SEQ) -o $(APP)_openmp

OMPOFFLOAD_KERNELS = $(MAIN_SRC)_ompoffload_kernels.cpp
$(APP)_ompoffload: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_ompoffload.a $(OPS_FILES_GEN) $(HEADERS)
	        $(CXX) $(OMPOFFLOADFLAGS) $(CXXFLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. ./OpenMP_offload/$(OMPOFFLOAD_KERNELS) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_OMPOFFLOAD) -o $(APP)_ompoffload

#
# Sequential version
#
$(APP)_seq: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a $(OPS_FILES_GEN) $(HEADERS)
		$(MPICPP) $(CXXFLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. ./MPI_OpenMP/$(SEQ_KERNELS) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_SEQ) $(TRID_SEQ) -fopenmp -o $(APP)_seq

#
# HIP version
#

$(APP)_hip: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_hip.a $(OPS_FILES_GEN) $(HEADERS)
		$(HIPCC) $(CXXFLAGS) $(HIPFLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. ./HIP/$(MAIN_SRC)_kernels.cpp $(OPS_LIB_HIP) $(HDF5_LIB_SEQ) $(OPS_LINK)  -o $(APP)_hip

#
# Tiled version
#
$(APP)_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_seq.a $(OPS_FILES_GEN) $(HEADERS)
		$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -D$(OPS_COMPILER) -DOPS_LAZY -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. ./MPI_OpenMP/$(SEQ_KERNELS) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_SEQ) -o $(APP)_tiled

$(APP)_mpi_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a $(OPS_FILES_GEN) \
                $(HEADERS)
		$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -DOPS_MPI -D$(OPS_COMPILER) -DOPS_LAZY -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. ./MPI_OpenMP/$(SEQ_KERNELS) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI) -o $(APP)_mpi_tiled

#
# CUDA version
#

$(APP)_cuda: ./CUDA/$(APP)_kernels_cu.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_cuda.a
		$(MPICPP) $(OMPFLAGS) $(CXXFLAGS) -I$(CUDA_INC) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(CUDA_LIB) $(OPS_FILES_GEN) $(TRID_CUDA) ./CUDA/$(APP)_kernels_cu.o $(CUDART) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_CUDA) -o $(APP)_cuda

$(APP)_mpi_cuda: ./CUDA/$(APP)_kernels_mpi_cu.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
		$(MPICPP) $(OMPFLAGS) $(CXXFLAGS) -DOPS_MPI -I$(CUDA_INC) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(CUDA_LIB) $(OPS_FILES_GEN) $(TRID_MPI_CUDA)  ./CUDA/$(APP)_kernels_mpi_cu.o $(CUDART) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI_CUDA) -o $(APP)_mpi_cuda

$(APP)_mpi_cuda_tiled: ./CUDA/$(APP)_kernels_mpi_tiled_cu.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
		$(MPICPP) $(OMPFLAGS) $(CXXFLAGS) -DOPS_MPI -DOPS_LAZY -I$(CUDA_INC) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(CUDA_LIB) $(OPS_FILES_GEN) $(TRID_LIB) ./CUDA/$(APP)_kernels_mpi_tiled_cu.o $(CUDART) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI_CUDA) -o $(APP)_mpi_cuda_tiled

$(APP)_mpi_hip: Makefile .generated ./HIP/$(APP)_kernels_mpi.o $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_hip.a $(OPS_FILES_GEN) $(HEADERS)
		$(HIPMPICPP) $(CXXFLAGS) $(HIPLINK) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. -DOPS_MPI ./HIP/$(MAIN_SRC)_kernels_mpi.o  $(OPS_LIB_MPI_HIP) $(HDF5_LIB_MPI) $(OPS_LINK)  $(HIP_LINK) -o $(APP)_mpi_hip

$(APP)_mpi_hip_tiled: Makefile .generated ./HIP/$(APP)_kernels_mpi_tiled.o $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_hip.a $(OPS_FILES_GEN) $(HEADERS)
		$(HIPMPICPP) $(CXXFLAGS) $(HIPLINK) -I$(C_OPS_INC) -DOPS_LAZY -L$(C_OPS_LIB) $(OPS_FILES_GEN) $(TRID_LIB) -I. -DOPS_MPI ./HIP/$(MAIN_SRC)_kernels_mpi_tiled.o $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI_HIP) $(HIP_LINK) -o $(APP)_mpi_hip_tiled

./HIP/$(APP)_kernels_mpi.o:	.generated Makefile
		$(HIPCC) $(CXXFLAGS) $(HIPFLAGS) -I$(C_OPS_INC) -I. -DOPS_MPI $(XCOMPILER) ./HIP/$(MAIN_SRC)_kernels.cpp -c -o ./HIP/$(MAIN_SRC)_kernels_mpi.o

./HIP/$(APP)_kernels_mpi_tiled.o:	.generated Makefile
		$(HIPCC) $(CXXFLAGS) $(HIPFLAGS) -I$(C_OPS_INC) -I. -DOPS_MPI -DOPS_LAZY $(XCOMPILER) ./HIP/$(MAIN_SRC)_kernels.cpp -c -o ./HIP/$(MAIN_SRC)_kernels_mpi_tiled.o


./CUDA/$(APP)_kernels_cu.o:	.generated Makefile
				$(NVCC) $(VAR) $(INC) $(NVCCFLAGS) $(CODE_GEN_CUDA) -I$(C_OPS_INC) -I. \
				-c -o ./CUDA/$(APP)_kernels_cu.o ./CUDA/$(MAIN_SRC)_kernels.cu

./CUDA/$(APP)_kernels_mpi_cu.o:	.generated Makefile
				$(NVCC) $(VAR) $(INC) $(NVCCFLAGS) -DOPS_MPI $(CODE_GEN_CUDA) -I$(C_OPS_INC) -I. -DMPICH_IGNORE_CXX_SEEK -I$(MPI_INSTALL_PATH)/include \
				-c -o ./CUDA/$(APP)_kernels_mpi_cu.o ./CUDA/$(MAIN_SRC)_kernels.cu

./CUDA/$(APP)_kernels_mpi_tiled_cu.o:	.generated Makefile
				$(NVCC) $(VAR) $(INC) $(NVCCFLAGS) -DOPS_MPI -DOPS_LAZY $(CODE_GEN_CUDA) -I$(C_OPS_INC) -I. -DMPICH_IGNORE_CXX_SEEK -I$(MPI_INSTALL_PATH)/include \
				-c -o ./CUDA/$(APP)_kernels_mpi_tiled_cu.o ./CUDA/$(MAIN_SRC)_kernels.cu

$(APP)_mpi_inline: .generated $(OPS_FILES_GEN) $(HEADERS) Makefile $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi.a
				$(MPICC) $(CCFLAGS) $(OMPFLAGS) -DOPS_MPI  -I$(C_OPS_INC) $(HDF5_INC) \
			        -I. MPI_inline/$(MAIN_SRC)_kernels_c.c -c -o MPI_inline/$(MAIN_SRC)_kernels_c.o
				$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -DOPS_MPI -I$(C_OPS_INC) $(HDF5_INC) \
				-I. MPI_inline/$(MAIN_SRC)_kernels.cpp -c -o MPI_inline/$(MAIN_SRC)_kernels.o
				$(MPICPP) $(CXXFLAGS) $(OMPFLAGS) -I$(C_OPS_INC) $(HDF5_INC) -L$(C_OPS_LIB)  -DOPS_MPI \
					$(OPS_FILES_GEN) -I. MPI_inline/$(MAIN_SRC)_kernels_c.o MPI_inline/$(MAIN_SRC)_kernels.o $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI) -o $(APP)_mpi_inline

$(APP)_openacc: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_cuda.a
	$(CC) $(OpenACCFLAGS) $(CCFLAGS) $(CUDA_ALIGNE_FLAG) -I$(C_OPS_INC) $(CUDA_INC) \
	-I. OpenACC/$(MAIN_SRC)_kernels_c.c -c -o OpenACC/$(MAIN_SRC)_kernels_c.o
	$(CXX) $(OpenACCFLAGS)  $(CXXFLAGS) $(CUDA_ALIGNE_FLAG) -I$(C_OPS_INC) $(CUDA_INC) \
	-I. OpenACC/$(MAIN_SRC)_kernels.cpp -c -o OpenACC/$(MAIN_SRC)_kernels.o
	$(CXX) $(OpenACCFLAGS) $(CXXFLAGS) $(CUDA_ALIGNE_FLAG) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(CUDA_INC) -L$(CUDA_LIB) \
		$(OPS_FILES_GEN) -I. OpenACC/$(MAIN_SRC)_kernels_c.o OpenACC/$(MAIN_SRC)_kernels.o -lcudart $(HDF5_LIB_SEQ) -lops_cuda -o $(APP)_openacc

$(APP)_mpi_openacc: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_cuda.a
	$(MPICC) $(OpenACCFLAGS) -Minline $(CCFLAGS) -DOPS_MPI $(CUDA_ALIGNE_FLAG) -I$(C_OPS_INC) $(CUDA_INC) \
	-I. OpenACC/$(MAIN_SRC)_kernels_c.c -c -o OpenACC/$(MAIN_SRC)_kernels_c_mpi.o
	$(MPICPP) $(OpenACCFLAGS)  $(CXXFLAGS) -DOPS_MPI $(CUDA_ALIGNE_FLAG) -I$(C_OPS_INC) $(CUDA_INC) \
	-I. OpenACC/$(MAIN_SRC)_kernels.cpp -c -o OpenACC/$(MAIN_SRC)_kernels_mpi.o
	        $(MPICPP) $(OpenACCFLAGS) $(CUDA_ALIGNE_FLAG) $(CXXFLAGS) -DOPS_MPI -I$(C_OPS_INC) -L$(C_OPS_LIB) $(CUDA_INC) -L$(CUDA_LIB) \
	        $(OPS_FILES_GEN) -I. OpenACC/$(MAIN_SRC)_kernels_c_mpi.o OpenACC/$(MAIN_SRC)_kernels_mpi.o -lcudart $(HDF5_LIB_MPI) -lops_mpi_cuda -o $(APP)_mpi_openacc

CL_SEQ_KERNELS = $(MAIN_SRC)_seq_kernels.cpp

$(APP)_opencl: ./OpenCL/$(MAIN_SRC)_opencl_kernels.o Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_opencl.a
	        $(MPICPP) $(CXXFLAGS) $(OCL_FLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(OPENCL_LIB) -lOpenCL $(OPS_FILES_GEN) ./OpenCL/$(MAIN_SRC)_opencl_kernels.o -I. $(HDF5_LIB_SEQ) -lops_opencl -o $(APP)_opencl

./OpenCL/$(MAIN_SRC)_opencl_kernels.o: .generated Makefile
		$(MPICPP) $(CXXFLAGS) $(OCL_FLAGS) $(VAR) -I$(OPENCL_INC) $(INC) -I$(C_OPS_INC) -I. \
                -c -o ./OpenCL/$(MAIN_SRC)_opencl_kernels.o ./OpenCL/$(MAIN_SRC)_opencl_kernels.cpp


$(APP)_mpi_opencl: ./OpenCL/$(MAIN_SRC)_mpi_opencl_kernels.o .generated Makefile $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_opencl.a
		$(MPICPP) $(CXXFLAGS) -DOPS_MPI $(OCL_FLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) -L$(OPENCL_LIB) -lOpenCL $(OPS_FILES_GEN) ./OpenCL/$(MAIN_SRC)_mpi_opencl_kernels.o -I. $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI)_opencl -o $(APP)_mpi_opencl

./OpenCL/$(MAIN_SRC)_mpi_opencl_kernels.o: .generated ./OpenCL/$(MAIN_SRC)_opencl_kernels.cpp Makefile
	        $(MPICPP) $(CXXFLAGS) $(VAR) -I$(OPENCL_INC) $(INC) -I$(C_OPS_INC) -I. -DOPS_MPI \
                -c -o ./OpenCL/$(MAIN_SRC)_mpi_opencl_kernels.o ./OpenCL/$(MAIN_SRC)_opencl_kernels.cpp

#
# SYCL version
#
SYCL_KERNELS = $(MAIN_SRC)_sycl_kernels.cpp
$(APP)_sycl: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_sycl.a $(OPS_FILES_GEN) $(HEADERS)
	$(SYCLCXX) $(CXXFLAGS) $(SYCL_FLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) -I. ./SYCL/$(SYCL_KERNELS) $(HDF5_LIB_SEQ) $(OPS_LINK) $(OPS_LIB_SYCL) -o $(APP)_sycl
$(APP)_mpi_sycl: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_mpi_sycl.a $(OPS_FILES_GEN) $(HEADERS)
	$(SYCLMPICXX) -DOPS_MPI $(CXXFLAGS) $(SYCL_FLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) -I. ./SYCL/$(SYCL_KERNELS) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI_SYCL) -o $(APP)_mpi_sycl
$(APP)_mpi_sycl_tiled: Makefile .generated $(OPS_INSTALL_PATH)/c/lib/$(OPS_COMPILER)/libops_sycl.a $(OPS_FILES_GEN) $(HEADERS)
	$(SYCLMPICXX) -DOPS_MPI -DOPS_LAZY $(CXXFLAGS) $(SYCL_FLAGS) -I$(C_OPS_INC) -L$(C_OPS_LIB) $(OPS_FILES_GEN) -I. ./SYCL/$(SYCL_KERNELS) $(HDF5_LIB_MPI) $(OPS_LINK) $(OPS_LIB_MPI_SYCL) -o $(APP)_mpi_sycl_tiled

#
#error
#
openacc_error:
	@echo "$(APP)_mpi_openacc cannot be built with $(OPS_COMPILER) compilers .. requires an OpenACC compiler (e.g. pgi)"

#
# cleanup
#

clean:
	rm -f *.o
	rm -f *.oo
	rm -f *.optrpt
	rm -f *~
	rm -f *.lst
	rm -f $(APP)_dev_seq
	rm -f $(APP)_dev_mpi
	rm -f $(APP)_seq
	rm -f $(APP)_mpi
	rm -f $(APP)_tiled
	rm -f $(APP)_mpi_tiled
	rm -f $(APP)_openmp
	rm -f $(APP)_cuda
	rm -f $(APP)_mpi_inline
	rm -f $(APP)_mpi_openmp
	rm -f $(APP)_mpi_cuda
	rm -f $(APP)_mpi_cuda_tiled
	rm -f $(APP)_openacc
	rm -f $(APP)_mpi_openacc
	rm -f $(APP)_opencl
	rm -f $(APP)_mpi_opencl
	rm -f $(APP)_hip
	rm -f $(APP)_mpi_hip
	rm -f ./MPI_OpenMP/*.o
	rm -f ./MPI_inline/*.o
	rm -f ./OpenMP_offload/*.o
	rm -f ./CUDA/*.o
	rm -f ./OpenACC/*.o
	rm -f ./OpenCL/*.o
	rm -f ./SYCL/*.o
