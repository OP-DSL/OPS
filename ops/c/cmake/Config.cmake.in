@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/ops_seq_targets.cmake")
check_required_components(ops_seq)
if (HDF5_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_hdf5_seq_targets.cmake")
    check_required_components(ops_hdf5_seq)
else()
    message(WARNING "ops_hdf5_seq is not included due to missing HDF5 library! If it is installed, please put find_package(OPS) after find_package(HDF5).")
endif ()
if (CUDAToolkit_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_cuda_targets.cmake")
    check_required_components(ops_cuda)
else()
    message(WARNING "ops_cuda is not included due to missing CUDA library! If it is installed, please put find_package(OPS) after find_package(CUDAToolkit).")
endif ()
if (OpenCL_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_opencl_targets.cmake")
    check_required_components(ops_opencl)
else()
    message(WARNING "ops_opencl is not included due to missing OpenCL library! If it is installed, please put find_package(OPS) after find_package(OpenCL).")
endif ()
if (MPI_FOUND)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_mpi_targets.cmake")
    check_required_components(ops_mpi)
    if (HDF5_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_hdf5_mpi_targets.cmake")
        check_required_components(ops_hdf5_mpi)
    else()
        message(WARNING "ops_hdf5_mpi is not included due to missing HDF5 library! If it is installed, please put find_package(OPS) after find_package(HDF5).")
    endif ()
    if (CUDAToolkit_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_mpi_cuda_targets.cmake")
        check_required_components(ops_mpi_cuda)
    else()
        message(WARNING "ops_mpi_cuda is not included due to missing CUDA library! If it is installed, please put find_package(OPS) after find_package(CUDAToolkit).")
    endif ()
    if (OpenCL_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_mpi_opencl_targets.cmake")
        check_required_components(ops_mpi_opencl)
    else()
        message(WARNING "ops_mpi_opencl is not included due to missing OpenCL library! If it is installed, please put find_package(OPS) after find_package(OpenCL).")
    endif ()
else()
    message(WARNING "All MPI modules are not included due to missing MPI! If it is installed, please put find_package(OPS) after find_package(MPI).")
endif ()

if (LIBTRID_PATH)
    include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_seq_targets.cmake")
    check_required_components(ops_trid_seq)
    if (CUDAToolkit_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_cuda_targets.cmake")
        check_required_components(ops_trid_cuda)
    else()
        message(WARNING "ops_trid_cuda is not included due to missing CUDA library! If it is installed, please put find_package(OPS) after find_package(CUDAToolkit).")
    endif ()
    if (MPI_FOUND)
        include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_mpi_targets.cmake")
        check_required_components(ops_trid_mpi)
        if (CUDAToolkit_FOUND)
            include("${CMAKE_CURRENT_LIST_DIR}/ops_trid_mpi_cuda_targets.cmake")
            check_required_components(ops_trid_mpi_cuda)
        else()
            message(WARNING "ops_trid_mpi_cuda is not included due to missing CUDA library! If it is installed, please put find_package(OPS) after find_package(CUDAToolkit).")
        endif ()
    else()
         message(WARNING "All MPI tridiagonal solvers are not included due to missing MPI! If it is installed, please put find_package(OPS) after find_package(MPI).")
    endif()
else()
     message(WARNING "All tridiagonal solvers are not included due to missing LIBTRID_PATH directive!")
endif ()